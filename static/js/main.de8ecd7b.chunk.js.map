{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","numberOfPages","Math","ceil","paginationButtons","className","cn","disabled","href","onClick","map","button","active","items","App","useState","setPerPage","setCurrentPage","numberOfItems","length","itemSliceIndexFrom","itemSliceIndexTo","itemFrom","itemTo","visibleItems","slice","item","id","value","onChange","e","target","htmlFor","nextPageNumber","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAwBC,KAAKC,KAAKN,EAAQC,GAC1CM,EAA8Bd,EAAW,EAAGW,GAElD,OACE,mCACE,qBAAII,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAAEC,SAA0B,IAAhBR,IAA3C,SACE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBT,EACfU,QAAS,kBAAMT,EAAaD,EAAc,IAL5C,oBAWDK,EAAkBM,KAAI,SAACC,GAAD,OACrB,oBACEN,UAAWC,IAAG,YAAa,CAAEM,OAAQb,IAAgBY,IADvD,SAIE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMT,EAAaW,IAJ9B,SAMGA,KAREA,MAaT,oBAAIN,UAAWC,IACb,YACA,CAAEC,SAAUR,IAAgBE,IAF9B,SAKE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeT,IAAgBE,EAC/BQ,QAAS,kBAAMT,EAAaD,EAAc,IAL5C,0BChDJc,EAAevB,EAAW,EAAG,IAChCoB,KAAI,SAAAhB,GAAC,qBAAYA,MAEPoB,EAAgB,WAC3B,MAA8BC,mBAAiB,GAA/C,mBAAOjB,EAAP,KAAgBkB,EAAhB,KACA,EAAsCD,mBAAiB,GAAvD,mBAAOhB,EAAP,KAAoBkB,EAApB,KAEMC,EAAwBL,EAAMM,OAC9BlB,EAAwBC,KAAKC,KAAKe,EAAgBpB,GAElDsB,GAA8BrB,EAAc,GAAKD,EACjDuB,EAA2BtB,EAAcD,EACzCwB,EAAmBF,EAAqB,EACxCG,EAAiBF,EAAmBH,EACtCA,EACAG,EAOEG,EAL2BX,EAAMY,MACrCL,EACAC,GAGiDX,KAAI,SAAAgB,GAAI,OACzD,oBACE,UAAQ,OADV,SAIGA,GAFIA,MAML3B,EAAcE,GAChBgB,EAAe,GAYjB,OACE,sBAAKZ,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWN,EADX,mBACiCuB,EADjC,cAC+CC,EAD/C,eAC4DL,EAD5D,OAIA,sBAAKb,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRsB,GAAG,kBACHtB,UAAU,eACVuB,MAAO9B,EACP+B,SAAU,SAACC,GAAD,OAAOd,GAAac,EAAEC,OAAOH,QALzC,SA7CsB,CAAC,EAAG,EAAG,GAAI,IAoDlBlB,KAAI,SAAAgB,GAAI,OACnB,wBACEE,MAAOF,EADT,SAIGA,GAFIA,UAQb,uBAAOM,QAAQ,kBAAkB3B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,MAAOqB,EACPpB,QAASA,EACTC,YAAaA,EACbC,aA9CmB,SAACiC,GACpBA,IAAmBlC,GAChBkC,GAAkBhC,GAClBgC,GAAkB,GAEvBhB,EAAegB,MA4Cf,6BACGT,QC1FTU,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.de8ecd7b.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (item: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const numberOfPages: number = Math.ceil(total / perPage);\n  const paginationButtons: number[] = getNumbers(1, numberOfPages);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={cn('page-item', { disabled: currentPage === 1 })}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={() => onPageChange(currentPage - 1)}\n          >\n            «\n          </a>\n        </li>\n\n        {paginationButtons.map((button) => (\n          <li\n            className={cn('page-item', { active: currentPage === button })}\n            key={button}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${button}`}\n              onClick={() => onPageChange(button)}\n            >\n              {button}\n            </a>\n          </li>\n        ))}\n\n        <li className={cn(\n          'page-item',\n          { disabled: currentPage === numberOfPages },\n        )}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === numberOfPages}\n            onClick={() => onPageChange(currentPage + 1)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ntype Items = string[];\n\nconst items: Items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState<number>(5);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n\n  const numberOfItems: number = items.length;\n  const numberOfPages: number = Math.ceil(numberOfItems / perPage);\n  const itemPerPage: number[] = [3, 5, 10, 20];\n  const itemSliceIndexFrom: number = (currentPage - 1) * perPage;\n  const itemSliceIndexTo: number = currentPage * perPage;\n  const itemFrom: number = itemSliceIndexFrom + 1;\n  const itemTo: number = itemSliceIndexTo > numberOfItems\n    ? numberOfItems\n    : itemSliceIndexTo;\n\n  const necessaryItems: string[] = items.slice(\n    itemSliceIndexFrom,\n    itemSliceIndexTo,\n  );\n\n  const visibleItems: JSX.Element[] = necessaryItems.map(item => (\n    <li\n      data-cy=\"item\"\n      key={item}\n    >\n      {item}\n    </li>\n  ));\n\n  if (currentPage > numberOfPages) {\n    setCurrentPage(1);\n  }\n\n  const handlePageChange = (nextPageNumber: number) => {\n    if (nextPageNumber !== currentPage\n        && nextPageNumber <= numberOfPages\n        && nextPageNumber >= 1\n    ) {\n      setCurrentPage(nextPageNumber);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${itemFrom} - ${itemTo} of ${numberOfItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={(e) => setPerPage(+(e.target.value))}\n          >\n            {itemPerPage.map(item => (\n              <option\n                value={item}\n                key={item}\n              >\n                {item}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={numberOfItems}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {visibleItems}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}